/*
 * Copyright (c) 2020 Trunexa Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; If not, see <http://www.gnu.org/licenses/>.
 */

#define __ASSEMBLY__
#include <config.h>

/* image version */

IMAGE_VERSION 2

/*
 * Boot Device : one of
 * spi/sd/nand/onenand, qspi/nor
 */

#ifdef CONFIG_SYS_BOOT_QSPI
BOOT_FROM	qspi
#elif defined(CONFIG_SYS_BOOT_EIMNOR)
BOOT_FROM	nor
#else
BOOT_FROM	sd
#endif


#ifdef CONFIG_SECURE_BOOT
CSF CONFIG_CSF_SIZE
#endif

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *	Addr-type register length (1,2 or 4 bytes)
 *	Address	  absolute address of the register
 *	value	  value to be stored in the register
 */


/* DDR type NT5CC128M16IP-DI */

DATA 4	0x020C4068 	0xFFFFFFFF	//[CCM_CCGR0]CCM Clock Gating Register 0
DATA 4	0x020C406C 	0xFFFFFFFF	//[CCM_CCGR1]CCM Clock Gating Register 1
DATA 4	0x020C4070 	0xFFFFFFFF	//[CCM_CCGR2]CCM Clock Gating Register 2
DATA 4	0x020C4074 	0xFFFFFFFF	//[CCM_CCGR3]CCM Clock Gating Register 3
DATA 4	0x020C4078 	0xFFFFFFFF	//[CCM_CCGR4]CCM Clock Gating Register 4
DATA 4	0x020C407C 	0xFFFFFFFF	//[CCM_CCGR5]CCM Clock Gating Register 5
DATA 4	0x020C4080 	0xFFFFFFFF	//[CCM_CCGR6]CCM Clock Gating Register 6
DATA 4	0x020E04B4 	0x000C0000	// IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE
DATA 4	0x020E04AC 	0x00000000	// IOMUXC_SW_PAD_CTL_GRP_DDRPKE
DATA 4	0x020E027C 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK0_P
DATA 4	0x020E0250 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
DATA 4	0x020E024C 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
DATA 4	0x020E0490 	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_ADDDS
DATA 4	0x020E0288 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET
DATA 4	0x020E0270 	0x00000000	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4	0x020E0260 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ODT0
DATA 4	0x020E0264 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ODT1
DATA 4	0x020E04A0 	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4	0x020E0494 	0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL
DATA 4	0x020E0280 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0_P
DATA 4	0x020E0284 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1_P
DATA 4	0x020E04B0 	0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE
DATA 4	0x020E0498 	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B0DS
DATA 4	0x020E04A4 	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B1DS
DATA 4	0x020E0244 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DATA 4	0x020E0248 	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
DATA 4	0x021B001C 	0x00008000	// [MMDC_MDSCR] MMDC Core Special Command Register
DATA 4	0x021B0800 	0xA1390003 	// DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.
DATA 4	0x021B080C 	0x00000000	// [MMDC_MPWLDECTRL0] MMDC PHY Write Leveling Delay Control Register 0
DATA 4	0x021B083C 	0x41490145	// [MMDC_MPDGCTRL0] MMDC PHY Read DQS Gating Control Register 0
DATA 4	0x021B0848 	0x40404546	// [MMDC_MPRDDLCTL] MMDC PHY Read delay-lines Configuration Register
DATA 4	0x021B0850 	0x4040524D	// [MMDC_MPWRDLCTL] MMDC PHY Write delay-lines Configuration Register
DATA 4	0x021B081C 	0x33333333	// [MMDC_MPRDDQBY0DL] MMDC PHY Read DQ Byte0 Delay Register
DATA 4	0x021B0820 	0x33333333	// [MMDC_MPRDDQBY1DL] MMDC PHY Read DQ Byte1 Delay Register
DATA 4	0x021B082C 	0xf3333333	// [MMDC_MPWRDQBY0DL] MMDC PHY Write DQ Byte0 Delay Register
DATA 4	0x021B0830 	0xf3333333	// [MMDC_MPWRDQBY1DL] MMDC PHY Write DQ Byte1 Delay Register
DATA 4	0x021B08C0 	0x00921012	// [MMDC_MPDCCR] MMDC Duty Cycle Control Register
DATA 4	0x021B08B8 	0x00000800 	// DDR_PHY_P0_MPMUR0, frc_msr
DATA 4	0x021B0004 	0x00010024	// MMDC0_MDPDC
DATA 4	0x021B0008 	0x1B233030	// MMDC0_MDOTC
DATA 4	0x021B000C 	0x333752C3	// MMDC0_MDCFG0
DATA 4	0x021B0010 	0x900B0B64	// MMDC0_MDCFG1
DATA 4	0x021B0014 	0x01FF00DB	// MMDC0_MDCFG2
DATA 4	0x021B0018 	0x00201740	// MMDC0_MDMISC
DATA 4	0x021B002C 	0x000026D2	// MMDC0_MDRWD; recommend to maintain the default values
DATA 4	0x021B0030 	0x00371023	// MMDC0_MDOR
DATA 4	0x021B0040 	0x00000047	// CS0_END
DATA 4	0x021B0000 	0x83180000	// MMDC0_MDCTL
DATA 4	0x021B001C 	0x02008032	// MMDC0_MDSCR, MR2 write, CS0
DATA 4	0x021B001C 	0x00008033	// MMDC0_MDSCR, MR3 write, CS0
DATA 4	0x021B001C 	0x00048031	// MMDC0_MDSCR, MR1 write, CS0
DATA 4	0x021B001C 	0x15208030	// MMDC0_MDSCR, MR0 write, CS0
DATA 4	0x021B001C 	0x04008040	// MMDC0_MDSCR, ZQ calibration command sent to device on CS0
DATA 4	0x021B0020 	0x00000800	// MMDC0_MDREF
DATA 4	0x021B0818 	0x00000227	// DDR_PHY_P0_MPODTCTRL
DATA 4	0x021B0004 	0x00015564	// MMDC0_MDPDC now SDCTL power down enabled
DATA 4	0x021B0404 	0x00011006 	// MMDC0_MAPSR ADOPT power down enabled
DATA 4	0x021B001C 	0x00000000	// MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)
